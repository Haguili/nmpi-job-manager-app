[{"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/index.js":"1","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/serviceWorker.js":"2","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/App.js":"3","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/auth.js":"4","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/JobDetail.js":"5","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/CreateJob.js":"6","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/JobList.js":"7","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/ResubmitJob.js":"8"},{"size":663,"mtime":1613119508463,"results":"9","hashOfConfig":"10"},{"size":5003,"mtime":1613119508463,"results":"11","hashOfConfig":"10"},{"size":1195,"mtime":1613119508463,"results":"12","hashOfConfig":"10"},{"size":4405,"mtime":1613119508463,"results":"13","hashOfConfig":"10"},{"size":6367,"mtime":1614935469903,"results":"14","hashOfConfig":"10"},{"size":581,"mtime":1613119508463,"results":"15","hashOfConfig":"10"},{"size":6697,"mtime":1615541866879,"results":"16","hashOfConfig":"10"},{"size":158,"mtime":1613119508463,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"abyjhp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/index.js",[],["36","37"],"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/serviceWorker.js",[],"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/App.js",[],"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/auth.js",[],"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/JobDetail.js",["38","39","40"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {\n  useParams\n} from \"react-router-dom\";\n//import { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n//import * as Mui from '@material-ui/core';\n// import Prism, { highlight } from \"prismjs\";\n// import hljs from 'highlight.js';\n// https://openbase.com/js/react-syntax-highlighter\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n// <link rel=\"stylesheet\" href=\"https://highlightjs.org/static/demo/styles/railscasts.css\" />\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport CheckBoxRoundedIcon from '@material-ui/icons/CheckBoxRounded';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    //fontWeight: theme.typography.fontWeightRegular,\n    fontWeight: 'bold',\n    \n\n    \n  },\n  expansion_panel_details:{\n   \n    backgroundColor:'#f8f8ff',\n    fontFamily:'Futura',\n    'font-size': '16px',\n\n  },\n  expansion_panel_summary:{\n    margin: {right:2},\n    fontStyle: 'bold',\n    fontFamily:'Helvetica',\n    backgroundColor:'#f2f2f2',\n\n  },\n\n}));\nfunction JobDetail(props) {\n  let { id } = useParams();\n  const[job, setJob] = useState({});\n\n  useEffect(() => {\n    let config = {\n      headers: {\n        'Authorization': 'Bearer ' + props.auth.token,\n      }\n    }\n    // const resultUrl = `https://raw.githubusercontent.com/jonathanduperrier/nmpi-job-manager-app-reactjs/master/db_${id}.json`;\n    const resultUrl = `https://nmpi.hbpneuromorphic.eu/api/v2/results/${id}/?collab_id=neuromorphic-testing-private`;\n\n    const fetchData = async () => {\n      const result = await axios(resultUrl, config);\n      await setJob(result.data);\n      console.log(result.data);\n    };\n     fetchData();\n  }, []);\n  const classes = useStyles();\n\n  return(\n    <div>\n      <h2> Job {id} </h2>\n        <div>\n        <p>\n          <span className={job.status === 'finished' ? ('badge badge-success') : 'badge badge-danger'}>{job.status}</span>\n        </p>\n        <p>\n          <small >\n            Submitted on <strong >{String(job.timestamp_submission).slice(0,10)+\" \"+String(job.timestamp_submission).slice(11,19)}</strong> by <strong >{job.user_id}</strong> to <strong >{job.hardware_platform}</strong>\n          </small>\n          <br></br>\n          <small >\n            Completed on <strong> {String(job.timestamp_completion).slice(0,10)+\" \"+String(job.timestamp_completion).slice(11,19)}</strong>\n          </small>\n        </p>\n\n\n        <ExpansionPanel defaultExpanded='true' >\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.expansion_panel_summary}>\n          <Typography className={classes.heading}>Output files</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.expansion_panel_details}>\n        {(job.output_data && job.output_data.length>0)? ( job.output_data.map(out_file =><div><p> <a href= {String(out_file.url)} > {String(out_file.url)} </a> {'\\n'} </p></div>))\n          : ('No files available')}\n  \n  \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n\n\n\n\n        <ExpansionPanel defaultExpanded='true' >\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.expansion_panel_summary}>\n          <Typography className={classes.heading} >Code</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails   className={classes.expansion_panel_details}>\n          <Typography>\n          <SyntaxHighlighter language=\"python\" style={docco}>\n          {String(job.code)}\n        </SyntaxHighlighter>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n\n      <ExpansionPanel defaultExpanded='true' >\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.expansion_panel_summary}>\n        <Typography className={classes.heading} >Command</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails  className={classes.expansion_panel_details}>\n        <Typography>\n        <SyntaxHighlighter language=\"bash\" style={docco}>\n        {String(job.command)}\n      </SyntaxHighlighter>\n        </Typography>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n\n\n    <ExpansionPanel defaultExpanded='true'>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.expansion_panel_summary}>\n        <Typography className={classes.heading} >Hardware Config</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails  className={classes.expansion_panel_details}>\n        \n      \n        {\"Platform: \"+job.hardware_platform}\n        <br></br>\n        {\"Ressource allocation ID: \"}\n        {(job.hardware_config)? (job.hardware_config.resource_allocation_id) : (\"Undefined\")}\n\n        \n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n\n    \n\n\n    <ExpansionPanel defaultExpanded='true' >\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.expansion_panel_summary}>\n        <Typography className={classes.heading} >Provenance</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails  className={classes.expansion_panel_details}>\n      \n      {(job.provenance) ?\n        (\"Machine's IP : \"+job.provenance.spinnaker_machine) : (\"No details\")\n      }\n\n\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n\n    <ExpansionPanel defaultExpanded='true' >\n    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.expansion_panel_summary} >\n      <Typography className={classes.heading} >Log</Typography>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails className={classes.expansion_panel_details}>\n\n\n      {job.log}\n\n\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default JobDetail;","/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/CreateJob.js",[],"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/JobList.js",["41","42","43"],"/media/haguili/Chernobyl/Documents/HBP/nmpi-job-manager-app/src/Queue/ResubmitJob.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":22,"column":10,"nodeType":"50","messageId":"51","endLine":22,"endColumn":24},{"ruleId":"48","severity":1,"message":"52","line":23,"column":8,"nodeType":"50","messageId":"51","endLine":23,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":71,"column":6,"nodeType":"55","endLine":71,"endColumn":8,"suggestions":"56"},{"ruleId":"48","severity":1,"message":"57","line":3,"column":31,"nodeType":"50","messageId":"51","endLine":3,"endColumn":40},{"ruleId":"48","severity":1,"message":"58","line":6,"column":10,"nodeType":"50","messageId":"51","endLine":6,"endColumn":17},{"ruleId":"48","severity":1,"message":"59","line":9,"column":10,"nodeType":"50","messageId":"51","endLine":9,"endColumn":20},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'CheckBoxRoundedIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.auth.token'. Either include them or remove the dependency array.","ArrayExpression",["62"],"'MdRefresh' is defined but never used.","'library' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [id, props.auth.token]",{"range":"65","text":"66"},[2343,2345],"[id, props.auth.token]"]